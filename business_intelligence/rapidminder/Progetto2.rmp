<?xml version="1.0" encoding="UTF-8"?><process version="9.10.008">
  <context>
    <input/>
    <output/>
    <macros/>
  </context>
  <operator activated="true" class="process" compatibility="9.10.008" expanded="true" name="Process">
    <parameter key="logverbosity" value="init"/>
    <parameter key="random_seed" value="2001"/>
    <parameter key="send_mail" value="never"/>
    <parameter key="notification_email" value=""/>
    <parameter key="process_duration_for_mail" value="30"/>
    <parameter key="encoding" value="SYSTEM"/>
    <process expanded="true">
      <operator activated="true" class="read_csv" compatibility="9.10.008" expanded="true" height="68" name="Read CSV" width="90" x="45" y="34">
        <parameter key="csv_file" value="C:\Users\eli_s\Desktop\Dataset_pulito1.csv"/>
        <parameter key="column_separators" value=";"/>
        <parameter key="trim_lines" value="false"/>
        <parameter key="use_quotes" value="true"/>
        <parameter key="quotes_character" value="&quot;"/>
        <parameter key="escape_character" value="\"/>
        <parameter key="skip_comments" value="true"/>
        <parameter key="comment_characters" value="#"/>
        <parameter key="starting_row" value="1"/>
        <parameter key="parse_numbers" value="true"/>
        <parameter key="decimal_character" value="."/>
        <parameter key="grouped_digits" value="false"/>
        <parameter key="grouping_character" value=","/>
        <parameter key="infinity_representation" value=""/>
        <parameter key="date_format" value=""/>
        <parameter key="first_row_as_names" value="true"/>
        <list key="annotations"/>
        <parameter key="time_zone" value="SYSTEM"/>
        <parameter key="locale" value="English (United States)"/>
        <parameter key="encoding" value="windows-1252"/>
        <parameter key="read_all_values_as_polynominal" value="false"/>
        <list key="data_set_meta_data_information">
          <parameter key="0" value="reviewerID.true.polynominal.attribute"/>
          <parameter key="1" value="asin.true.polynominal.attribute"/>
          <parameter key="2" value="reviewText.true.polynominal.attribute"/>
          <parameter key="3" value="overall.true.real.attribute"/>
          <parameter key="4" value="label.true.integer.attribute"/>
          <parameter key="5" value="year.true.integer.attribute"/>
          <parameter key="6" value="month.false.integer.attribute"/>
          <parameter key="7" value="day.false.integer.attribute"/>
          <parameter key="8" value="season.true.integer.attribute"/>
          <parameter key="9" value="utility.false.real.attribute"/>
        </list>
        <parameter key="read_not_matching_values_as_missings" value="false"/>
      </operator>
      <operator activated="true" class="subprocess" compatibility="9.10.008" expanded="true" height="82" name="Preprocessing text" width="90" x="313" y="34">
        <process expanded="true">
          <operator activated="true" class="select_attributes" compatibility="9.10.008" expanded="true" height="82" name="Select reviewText" width="90" x="45" y="34">
            <parameter key="attribute_filter_type" value="single"/>
            <parameter key="attribute" value="reviewText"/>
            <parameter key="attributes" value="Helpful_ratio|label|reviewText"/>
            <parameter key="use_except_expression" value="false"/>
            <parameter key="value_type" value="attribute_value"/>
            <parameter key="use_value_type_exception" value="false"/>
            <parameter key="except_value_type" value="time"/>
            <parameter key="block_type" value="attribute_block"/>
            <parameter key="use_block_type_exception" value="false"/>
            <parameter key="except_block_type" value="value_matrix_row_start"/>
            <parameter key="invert_selection" value="false"/>
            <parameter key="include_special_attributes" value="false"/>
          </operator>
          <operator activated="true" class="nominal_to_text" compatibility="9.10.008" expanded="true" height="82" name="Nominal to Text" width="90" x="179" y="34">
            <parameter key="attribute_filter_type" value="single"/>
            <parameter key="attribute" value="reviewText"/>
            <parameter key="attributes" value=""/>
            <parameter key="use_except_expression" value="false"/>
            <parameter key="value_type" value="nominal"/>
            <parameter key="use_value_type_exception" value="false"/>
            <parameter key="except_value_type" value="file_path"/>
            <parameter key="block_type" value="single_value"/>
            <parameter key="use_block_type_exception" value="false"/>
            <parameter key="except_block_type" value="single_value"/>
            <parameter key="invert_selection" value="false"/>
            <parameter key="include_special_attributes" value="false"/>
          </operator>
          <operator activated="true" class="text:process_document_from_data" compatibility="9.4.000" expanded="true" height="82" name="Process Documents from Data" width="90" x="313" y="34">
            <parameter key="create_word_vector" value="true"/>
            <parameter key="vector_creation" value="TF-IDF"/>
            <parameter key="add_meta_information" value="true"/>
            <parameter key="keep_text" value="true"/>
            <parameter key="prune_method" value="absolute"/>
            <parameter key="prune_below_percent" value="3.0"/>
            <parameter key="prune_above_percent" value="30.0"/>
            <parameter key="prune_below_absolute" value="30"/>
            <parameter key="prune_above_absolute" value="100000"/>
            <parameter key="prune_below_rank" value="0.05"/>
            <parameter key="prune_above_rank" value="0.95"/>
            <parameter key="datamanagement" value="double_sparse_array"/>
            <parameter key="data_management" value="auto"/>
            <parameter key="select_attributes_and_weights" value="false"/>
            <list key="specify_weights"/>
            <process expanded="true">
              <operator activated="true" class="text:tokenize" compatibility="9.4.000" expanded="true" height="68" name="Tokenize" width="90" x="112" y="187">
                <parameter key="mode" value="non letters"/>
                <parameter key="characters" value=".:"/>
                <parameter key="language" value="English"/>
                <parameter key="max_token_length" value="3"/>
              </operator>
              <operator activated="true" class="text:transform_cases" compatibility="9.4.000" expanded="true" height="68" name="Transform Cases" width="90" x="246" y="187">
                <parameter key="transform_to" value="lower case"/>
              </operator>
              <operator activated="true" class="text:filter_stopwords_english" compatibility="9.4.000" expanded="true" height="68" name="Filter Stopwords (English)" width="90" x="380" y="187"/>
              <operator activated="true" class="text:filter_stopwords_dictionary" compatibility="9.4.000" expanded="true" height="82" name="Filter Stopwords (Dictionary)" width="90" x="514" y="187">
                <parameter key="file" value="C:/Users/eli_s/Desktop/stopwordsEnglish.txt"/>
                <parameter key="case_sensitive" value="false"/>
                <parameter key="encoding" value="UTF-8"/>
              </operator>
              <operator activated="true" class="text:stem_snowball" compatibility="9.4.000" expanded="true" height="68" name="Stem (Snowball)" width="90" x="648" y="187">
                <parameter key="language" value="English"/>
              </operator>
              <operator activated="true" class="text:filter_by_length" compatibility="9.4.000" expanded="true" height="68" name="Filter Tokens (by Length)" width="90" x="782" y="187">
                <parameter key="min_chars" value="4"/>
                <parameter key="max_chars" value="10"/>
              </operator>
              <operator activated="true" class="text:filter_tokens_by_content" compatibility="9.4.000" expanded="true" height="68" name="Filter Tokens (by Content)" width="90" x="916" y="187">
                <parameter key="condition" value="contains match"/>
                <parameter key="regular_expression" value="amazon"/>
                <parameter key="case_sensitive" value="false"/>
                <parameter key="invert condition" value="true"/>
              </operator>
              <connect from_port="document" to_op="Tokenize" to_port="document"/>
              <connect from_op="Tokenize" from_port="document" to_op="Transform Cases" to_port="document"/>
              <connect from_op="Transform Cases" from_port="document" to_op="Filter Stopwords (English)" to_port="document"/>
              <connect from_op="Filter Stopwords (English)" from_port="document" to_op="Filter Stopwords (Dictionary)" to_port="document"/>
              <connect from_op="Filter Stopwords (Dictionary)" from_port="document" to_op="Stem (Snowball)" to_port="document"/>
              <connect from_op="Stem (Snowball)" from_port="document" to_op="Filter Tokens (by Length)" to_port="document"/>
              <connect from_op="Filter Tokens (by Length)" from_port="document" to_op="Filter Tokens (by Content)" to_port="document"/>
              <connect from_op="Filter Tokens (by Content)" from_port="document" to_port="document 1"/>
              <portSpacing port="source_document" spacing="0"/>
              <portSpacing port="sink_document 1" spacing="0"/>
              <portSpacing port="sink_document 2" spacing="0"/>
            </process>
          </operator>
          <connect from_port="in 1" to_op="Select reviewText" to_port="example set input"/>
          <connect from_op="Select reviewText" from_port="example set output" to_op="Nominal to Text" to_port="example set input"/>
          <connect from_op="Nominal to Text" from_port="example set output" to_op="Process Documents from Data" to_port="example set"/>
          <connect from_op="Process Documents from Data" from_port="example set" to_port="out 1"/>
          <portSpacing port="source_in 1" spacing="0"/>
          <portSpacing port="source_in 2" spacing="0"/>
          <portSpacing port="sink_out 1" spacing="0"/>
          <portSpacing port="sink_out 2" spacing="0"/>
        </process>
      </operator>
      <operator activated="true" class="subprocess" compatibility="9.10.008" expanded="true" height="166" name="Clustering" width="90" x="447" y="34">
        <process expanded="true">
          <operator activated="true" class="concurrency:k_means" compatibility="9.10.008" expanded="true" height="82" name="Clustering (k-means)" width="90" x="45" y="187">
            <parameter key="add_cluster_attribute" value="true"/>
            <parameter key="add_as_label" value="false"/>
            <parameter key="remove_unlabeled" value="false"/>
            <parameter key="k" value="6"/>
            <parameter key="max_runs" value="50"/>
            <parameter key="determine_good_start_values" value="true"/>
            <parameter key="measure_types" value="NumericalMeasures"/>
            <parameter key="mixed_measure" value="MixedEuclideanDistance"/>
            <parameter key="nominal_measure" value="NominalDistance"/>
            <parameter key="numerical_measure" value="CosineSimilarity"/>
            <parameter key="divergence" value="SquaredEuclideanDistance"/>
            <parameter key="kernel_type" value="radial"/>
            <parameter key="kernel_gamma" value="1.0"/>
            <parameter key="kernel_sigma1" value="1.0"/>
            <parameter key="kernel_sigma2" value="0.0"/>
            <parameter key="kernel_sigma3" value="2.0"/>
            <parameter key="kernel_degree" value="3.0"/>
            <parameter key="kernel_shift" value="1.0"/>
            <parameter key="kernel_a" value="1.0"/>
            <parameter key="kernel_b" value="0.0"/>
            <parameter key="max_optimization_steps" value="100"/>
            <parameter key="use_local_random_seed" value="false"/>
            <parameter key="local_random_seed" value="1992"/>
          </operator>
          <operator activated="true" class="multiply" compatibility="9.10.008" expanded="true" height="124" name="Multiply (2)" width="90" x="179" y="442"/>
          <operator activated="true" class="multiply" compatibility="9.10.008" expanded="true" height="124" name="Multiply" width="90" x="246" y="34"/>
          <operator activated="true" class="execute_script" compatibility="9.10.008" expanded="true" height="103" name="Execute Script" width="90" x="447" y="289">
            <parameter key="script" value="/* &#10; * You can use both Java and Groovy syntax in this script.&#10; * &#10; * Note that you have access to the following two predefined variables:&#10; * 1) input (an array of all input data)&#10; * 2) operator (the operator instance which is running this script)&#10; */&#10;&#10;// Take first input data and treat it as generic IOObject&#10;// Alternatively, you could treat it as an ExampleSet if it is one:&#10;// ExampleSet inputData = input[0];&#10;IOObject inputData = input[0];&#10;&#10;&#10;/**&#10;*&#9;&#10;*&#9;Version: 1.0.0&#10;*&#9;&#10;*&#10;*&#9;Description:&#10;*&#9;This script permits to calculate the SSE measure of a given clustering.&#10;*&#10;*&#9;Input:&#10;*&#9;input[0]: the cluster model coming out from the cluster operator&#10;*&#9;input[1]: the example set of the clustering&#10;*&#10;*&#9;Output:&#10;*&#9;The SSE value of the clustering will be displayed in log console.&#10;**/&#10;&#10;import com.rapidminer.operator.clustering.ClusterModel;&#10;import com.rapidminer.operator.clustering.Cluster;&#10;&#10;int DBSCAN = 1;&#10;int KMEANS = 0;&#10;&#10;/** Set the current clustering algorithm **/&#10;int ALGO = KMEANS;&#10;/************* End setting ****************/&#10;&#10;ClusterModel clustering = input[0];&#10;ExampleSet clusteringSet = input[1];&#10;&#10;operator.logNote(&quot;=============== SSE Computation ===============&quot;);&#10;Double sum = new Double(0);&#10;for (int i=ALGO; i &lt; clustering.getNumberOfClusters(); i++) {&#10;&#9;Cluster cluster = clustering.getCluster(i);&#10;&#10;&#9;if (cluster.getNumberOfExamples() == 0) {&#10;&#9;&#9;continue;&#10;&#9;}&#10;&#9;else {&#10;&#9;&#9;Collection&lt;Object&gt; idsList = cluster.getExampleIds();&#10;&#9;&#9;clusteringSet.remapIds();&#10;&#9;&#9;TreeMap&lt;String,Double&gt; centroid = new TreeMap&lt;String, Double&gt;();&#10;&#9;&#9;Attribute[] atts = clusteringSet.getExampleFromId(1).getAttributes().createRegularAttributeArray();&#10;&#9;&#9;for (Attribute att : atts){&#10;&#9;&#9;&#9;String attStr = att.getName();&#10;&#9;&#9;&#9;centroid.put(attStr, 0.0);&#10;&#9;&#9;}&#10;&#9;&#9;&#10;&#9;&#9;for (Object id : idsList) {&#10;&#9;&#9;&#9;Example example = clusteringSet.getExampleFromId((Double) id);&#10;&#9;&#9;&#9;for (Attribute att : atts){&#10;&#9;&#9;&#9;&#9;String attStr = att.getName();&#10;&#9;&#9;&#9;&#9;Double bValue = new Double(example.getValue(example.getAttributes().get(attStr)));&#10;&#9;&#9;&#9;&#9;centroid.put(attStr, centroid.get(attStr) + bValue);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#10;&#9;&#9;for (Attribute att : atts){&#10;&#9;&#9;&#9;String attStr = att.getName();&#10;&#9;&#9;&#9;centroid.put(attStr, centroid.get(attStr)/idsList.size());&#10;&#9;&#9;}&#10;&#9;&#9;operator.logNote(&quot;Centroid cluster &quot; + i + &quot;: &quot; + centroid);&#10;&#10;&#9;&#9;for (Object id : idsList) {&#10;&#9;&#9;&#9;Example example = clusteringSet.getExampleFromId((Double) id);&#10;&#9;&#9;&#9;distance = new Double(calculateEuclideanDistance(centroid, example));&#10;&#9;&#9;&#9;sum += distance*distance;&#10;&#9;&#9;}&#10;&#9;}&#10;}&#10;operator.logNote(&quot;SSE: &quot; + sum);&#10;operator.logNote(&quot;================== SSE End =================&quot;);&#10;&#10;Double calculateEuclideanDistance(TreeMap a, Example b)&#10;{&#10;&#9;&#9;Attribute[] atts = b.getAttributes().createRegularAttributeArray();&#10;&#9;&#9;Double sum = new Double(0);&#10;&#9;&#9;Double dist = new Double(0);&#10;&#9;&#9;for (Attribute att : atts){&#10;&#9;&#9;&#9;String attStr = att.getName();&#10;&#9;&#9;&#9;Double aValue = a.get(attStr);&#10;&#9;&#9;&#9;Double bValue = new Double(b.getValue(b.getAttributes().get(attStr)));&#10;&#9;&#9;&#9;Double difference = new Double(aValue - bValue);&#10;&#9;&#9;&#9;sum += Math.pow(difference,2);&#10;&#9;&#9;}&#10;&#9;&#9;dist = Math.sqrt(sum);&#10;&#9;&#9;&#10;&#9;&#9;return dist;&#10;}&#10;&#10;&#10;&#10;&#10;&#10;// This line returns the first input as the first output&#10;return inputData;"/>
            <parameter key="standard_imports" value="true"/>
          </operator>
          <operator activated="true" class="model_simulator:cluster_model_visualizer" compatibility="9.10.002" expanded="true" height="103" name="Cluster Model" width="90" x="447" y="136"/>
          <operator activated="true" class="extract_prototypes" compatibility="9.10.008" expanded="true" height="82" name="Cluster Prototypes" width="90" x="447" y="34"/>
          <connect from_port="in 1" to_op="Clustering (k-means)" to_port="example set"/>
          <connect from_op="Clustering (k-means)" from_port="cluster model" to_op="Multiply" to_port="input"/>
          <connect from_op="Clustering (k-means)" from_port="clustered set" to_op="Multiply (2)" to_port="input"/>
          <connect from_op="Multiply (2)" from_port="output 1" to_op="Cluster Model" to_port="clustered data"/>
          <connect from_op="Multiply (2)" from_port="output 2" to_port="out 4"/>
          <connect from_op="Multiply (2)" from_port="output 3" to_op="Execute Script" to_port="input 2"/>
          <connect from_op="Multiply" from_port="output 1" to_op="Cluster Prototypes" to_port="model"/>
          <connect from_op="Multiply" from_port="output 2" to_op="Cluster Model" to_port="model"/>
          <connect from_op="Multiply" from_port="output 3" to_op="Execute Script" to_port="input 1"/>
          <connect from_op="Execute Script" from_port="output 1" to_port="out 5"/>
          <connect from_op="Cluster Model" from_port="visualizer output" to_port="out 3"/>
          <connect from_op="Cluster Prototypes" from_port="example set" to_port="out 1"/>
          <connect from_op="Cluster Prototypes" from_port="model" to_port="out 2"/>
          <portSpacing port="source_in 1" spacing="0"/>
          <portSpacing port="source_in 2" spacing="0"/>
          <portSpacing port="sink_out 1" spacing="0"/>
          <portSpacing port="sink_out 2" spacing="0"/>
          <portSpacing port="sink_out 3" spacing="0"/>
          <portSpacing port="sink_out 4" spacing="0"/>
          <portSpacing port="sink_out 5" spacing="0"/>
          <portSpacing port="sink_out 6" spacing="0"/>
        </process>
      </operator>
      <connect from_op="Read CSV" from_port="output" to_op="Preprocessing text" to_port="in 1"/>
      <connect from_op="Preprocessing text" from_port="out 1" to_op="Clustering" to_port="in 1"/>
      <connect from_op="Clustering" from_port="out 1" to_port="result 1"/>
      <connect from_op="Clustering" from_port="out 2" to_port="result 2"/>
      <connect from_op="Clustering" from_port="out 3" to_port="result 3"/>
      <connect from_op="Clustering" from_port="out 4" to_port="result 4"/>
      <connect from_op="Clustering" from_port="out 5" to_port="result 5"/>
      <portSpacing port="source_input 1" spacing="0"/>
      <portSpacing port="sink_result 1" spacing="0"/>
      <portSpacing port="sink_result 2" spacing="0"/>
      <portSpacing port="sink_result 3" spacing="0"/>
      <portSpacing port="sink_result 4" spacing="0"/>
      <portSpacing port="sink_result 5" spacing="0"/>
      <portSpacing port="sink_result 6" spacing="0"/>
    </process>
  </operator>
</process>
